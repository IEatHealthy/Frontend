using Foundation; using System; using System.Collections; using UIKit; using System.IO; using Newtonsoft.Json; using System.Collections.Generic; namespace IEatHealthy.iOS {     public partial class CartViewController : UITableViewController     {         public CartViewController(IntPtr handle) : base(handle)         {         }          ArrayList tableItems = new ArrayList();          protected string cellIdentifer = "TableCell";          // Initial Load into Memory         public override void ViewDidLoad()         {             base.ViewDidLoad();             string path = Environment.GetFolderPath(Environment.SpecialFolder.Personal);             string filename = Path.Combine(path, "myshoppingcart.json");              // if JSON file does not exist, create a new one.             if (!File.Exists(filename))             {                 List<Ingredient> ingredients = new List<Ingredient> { } ;                 File.WriteAllText(@filename, JsonConvert.SerializeObject(ingredients));             }             // if JSON file does exist, deserializes the objects and inputs them into the tableItems array             else             {                 tableItems.Clear();                 List<Ingredient> ingredients = JsonConvert.DeserializeObject<List<Ingredient>>(File.ReadAllText(@filename));                 foreach (Ingredient ingredient in ingredients)                 {                     tableItems.Add(ingredient.Name);                 }             }          }          // Refreshes the page incase of changes to the JSON file         public override void ViewWillAppear(bool animated)         {             base.ViewWillAppear(animated);             infoFromJson();             TableView.ReloadData();         }          // Serializes objects from JSON file and inputs them into the tableItems array         public void infoFromJson()         {             tableItems.Clear();             string path = Environment.GetFolderPath(Environment.SpecialFolder.Personal);             string filename = Path.Combine(path, "myshoppingcart.json");              List<Ingredient> ingredients = JsonConvert.DeserializeObject<List<Ingredient>>(File.ReadAllText(@filename));             foreach (Ingredient ingredient in ingredients)             {                 tableItems.Add(ingredient.Name);             }         }          // Number of rows should be the amount of items in the tableItems array.         public override nint RowsInSection(UITableView tableView, nint section)         {             return tableItems.Count;         }          // Display the tableItems         public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)         {             UITableViewCell cell = tableView.DequeueReusableCell(cellIdentifer);              if (cell == null)                 cell = new UITableViewCell(UITableViewCellStyle.Default, cellIdentifer);              cell.TextLabel.Text = (string)tableItems[indexPath.Row];               return cell;         }          public override void RowSelected(UITableView tableView, NSIndexPath indexPath)         {             // Checkmarks ingredient when selected, deselects when selected again.             UITableViewCell cell = tableView.CellAt(indexPath);             if (cell.Accessory == UITableViewCellAccessory.None)                 cell.Accessory = UITableViewCellAccessory.Checkmark;             else                 cell.Accessory = UITableViewCellAccessory.None;             tableView.DeselectRow(indexPath, true);         }          public override void CommitEditingStyle(UITableView tableView, UITableViewCellEditingStyle editingStyle, Foundation.NSIndexPath indexPath)         {             switch (editingStyle)             {                 case UITableViewCellEditingStyle.Delete:                     string path = Environment.GetFolderPath(Environment.SpecialFolder.Personal);                     string filename = Path.Combine(path, "myshoppingcart.json");                     List<Ingredient> ingredients = JsonConvert.DeserializeObject<List<Ingredient>>(File.ReadAllText(@filename));                     ingredients.RemoveAt(indexPath.Row);                     tableItems.RemoveAt(indexPath.Row);                     tableView.DeleteRows(new NSIndexPath[] { indexPath } , UITableViewRowAnimation.Fade);                     File.WriteAllText(@filename, JsonConvert.SerializeObject(ingredients));                     break;                 case UITableViewCellEditingStyle.None:                     break;             }         }

        partial void ClearBtn_Activated(UIBarButtonItem sender)
        {
            string path = Environment.GetFolderPath(Environment.SpecialFolder.Personal);             string filename = Path.Combine(path, "myshoppingcart.json");             tableItems.Clear();             List<Ingredient> ingredients = new List<Ingredient> { };             File.WriteAllText(@filename, JsonConvert.SerializeObject(ingredients));             TableView.ReloadData();         }     } } 